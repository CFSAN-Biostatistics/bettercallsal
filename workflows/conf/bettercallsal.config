params {
    workflow_conceived_by = 'Kranti Konganti'
    workflow_built_by = 'Kranti Konganti'
    workflow_version = '0.2.1'
    bcs_root_dbdir = '/hpc/db/bettercallsal/latest'
    bcs_db_mode = 'snp'
    bcs_db_mode_index = (params.bcs_db_mode ==~ /snp/ ? '_cluster' : '_serotype')
    bbmerge_run = true
    bcs_thresholds = 'strict'
    bbmerge_adapters = false
    bbmerge_reads = -1
    bbmerge_ziplevel = 1
    bbmerge_ordered = false
    bbmerge_qtrim = true
    bbmerge_qtrim2 = false
    bbmerge_trimq = 10
    bbmerge_minlength = 1
    bbmerge_tbo = false
    bbmerge_minavgquality = (params.bcs_thresholds ==~ /strict/ ? 30 : 20)
    bbmerge_trimpolya = true
    bbmerge_pfilter = (params.bcs_thresholds ==~ /strict/ ? 1 : false)
    bbmerge_ouq = false
    bbmerge_owq = true
    bbmerge_strict = false
    bbmerge_verystrict = false 
    bbmerge_ultrastrict = (params.bcs_thresholds ==~ /strict/ ? true : false)
    bbmerge_maxstrict = false
    bbmerge_loose = false
    bbmerge_veryloose = false
    bbmerge_ultraloose = false
    bbmerge_maxloose = false
    bbmerge_fast = false
    bbmerge_k = 60
    bbmerge_prealloc = true
    mashscreen_run = true
    mash_sketch = (params.bcs_root_dbdir 
        + File.separator 
        + 'mash_sketch' 
        + File.separator 
        + 'msh.k21.1000h.' 
        + params.bcs_db_mode 
        + '.msh')
    mashscreen_w = false
    mashscreen_i = false
    mashscreen_v = false
    tuspy_run = true
    tuspy_s = false
    tuspy_m = false
    tuspy_ps = (params.bcs_root_dbdir 
        + File.separator 
        + 'index_metadata' 
        + File.separator 
        + 'per_' 
        + params.bcs_db_mode 
        + params.bcs_db_mode_index 
        + '.ACC2SERO.pickle')
    tuspy_gd = (params.bcs_root_dbdir 
        + File.separator 
        + 'scaffold_genomes')
    tuspy_gds = '_scaffolded_genomic.fna.gz'
    tuspy_n = 10
    kmaindex_run = true
    kmaindex_t_db = false
    kmaindex_k = 31
    kmaindex_m = false
    kmaindex_hc = false
    kmaindex_ML = false
    kmaindex_ME = false
    kmaindex_Sparse = false
    kmaindex_ht = false
    kmaindex_hq = false
    kmaindex_and = false
    kmaindex_nbp = false
    kmaalign_run = true
    kmaalign_ignorequals = false
    kmaalign_int = false
    kmaalign_ef = false
    kmaalign_vcf = false
    kmaalign_sam = false
    kmaalign_nc = true
    kmaalign_na = true
    kmaalign_nf = true
    kmaalign_a = false
    kmaalign_and = true
    kmaalign_oa = false
    kmaalign_bc = false
    kmaalign_bcNano = false
    kmaalign_bcd = false
    kmaalign_bcg = false
    kmaalign_ID = (params.bcs_thresholds ==~ /strict/ ? 10.0 : 5.0)
    kmaalign_md = false
    kmaalign_dense = false
    kmaalign_ref_fsa = false
    kmaalign_Mt1 = false
    kmaalign_1t1 = false
    kmaalign_mrs = (params.bcs_thresholds ==~ /strict/ ? 0.99 : 0.90)
    kmaalign_mrc = (params.bcs_thresholds ==~ /strict/ ? 0.99 : 0.90)
    kmaalign_mp = (params.bcs_thresholds ==~ /strict/ ? 30 : 20)
    kmaalign_eq = (params.bcs_thresholds ==~ /strict/ ? 30 : 20)
    kmaalign_mp = (params.kmaalign_ignorequals ? false : params.kmaalign_mp)
    kmaalign_eq = (params.kmaalign_ignorequals ? false : params.kmaalign_eq)
    kmaalign_mq = false
    kmaalign_5p = false
    kmaalign_3p = false
    kmaalign_apm = false
    kmaalign_cge = false
    salmonidx_run = true
    salmonidx_k = false
    salmonidx_gencode = false
    salmonidx_features = false
    salmonidx_keepDuplicates = false
    salmonidx_keepFixedFasta = false
    salmonidx_filterSize = false
    salmonidx_sparse = false
    salmonidx_n = false
    salmonidx_decoys = false
    salmonalign_libtype = 'SF'
    gsrpy_run = true
    gsrpy_url = true
    gsrpy_snp_clus_metadata =  (params.bcs_root_dbdir
        + File.separator
        + 'download_pdg_metadata'
        + File.separator 
        + getPDGRelease(params.bcs_root_dbdir) 
        + File.separator
        + getPDGRelease(params.bcs_root_dbdir) 
        + '.reference_target.cluster_list.tsv')
    fq_filter_by_len = 0
    fq_suffix = '.fastq.gz'
    fq2_suffix = '_R2_001.fastq.gz'
}

/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    METHOD TO GET PDG RELEASE AND SET REST OF THE METADATA FILES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

def getPDGRelease(db_path) {
	db_path_obj = new File( db_path )
	def pdg_release = []

	db_path_obj.eachDirRecurse {
		it.toString() =~ /PDG/ \
            ? pdg_release << it.toString().find(/PDG\d+\.\d+/) \
            : null
	}

	return pdg_release.unique().join('').toString()
}
